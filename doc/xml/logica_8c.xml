<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="logica_8c" kind="file" language="C++">
    <compoundname>logica.c</compoundname>
    <includes refid="logica_8h" local="yes">logica.h</includes>
    <includes refid="interface_8h" local="yes">interface.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">unistd.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">time.h</includes>
    <incdepgraph>
      <node id="7">
        <label>stdlib.h</label>
      </node>
      <node id="1">
        <label>logica.c</label>
        <link refid="logica_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>logica.h</label>
        <link refid="logica_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>limits.h</label>
      </node>
      <node id="8">
        <label>string.h</label>
      </node>
      <node id="9">
        <label>unistd.h</label>
      </node>
      <node id="12">
        <label>time.h</label>
      </node>
      <node id="10">
        <label>ctype.h</label>
      </node>
      <node id="4">
        <label>dados.h</label>
        <link refid="dados_8h"/>
      </node>
      <node id="6">
        <label>interface.h</label>
        <link refid="interface_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="5">
        <label>lista.h</label>
        <link refid="lista_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="logica_8c_1a6821bafc3c88dfb2e433a095df9940c6" prot="public" static="no">
        <name>BUF_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="5" column="13" bodyfile="logica.c" bodystart="5" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="logica_8c_1ac313d7e553b1e2b5f266acb9bfff8141" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogar</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que usa os dados do estado e do input do jogador para fazer a jogada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada introduzida pelo utilizador. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Um novo estado atualizado conforme a jogada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Coloca a nova posição da peça branca como posição anterior para ser usada futuramente. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="12" column="5" bodyfile="logica.c" bodystart="12" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a97c7ad5b7c6b698beca8006e674b85da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogada_possivel</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogada_possivel</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se a jogada é possivel. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada introduzida pelo utilizador. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 Caso nao seja possivel, 1 caso seja possivel. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="26" column="5" bodyfile="logica.c" bodystart="26" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1aea1fcb269536a2b7ee0d12518887cd09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogo_terminado</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jogo_terminado</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica se o jogo terminou. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso o jogador 1 ganhe, 2 caso o jogador ganhe, 0 caso ainda ninguem tenha ganho, 3 caso as jogadas acabem, ou 4 caso a peça fique encurralada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="37" column="5" bodyfile="logica.c" bodystart="37" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a1e08ddaa296db25866c21b3ea2a9c106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int encurralado</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>encurralado</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica se a peça está encurralada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso esteja encurralada, 0 caso nao esteja. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Verifica primeiro se a peça está num dos cantos do tabuleiro, e, caso esteja, verifica se está encurralada. </para>
</blockquote></para>
<para><blockquote><para>Caso nao esteja em um dos cantos, chama a função &quot;check_around()&quot; para verificar se está ou nao encurralada. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="52" column="5" bodyfile="logica.c" bodystart="52" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a9065d2c25c9052ce1f7f5e1d6272dd6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_around</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>check_around</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica se todas as casas a volta da peça branca estao preenchidas com peças pretas. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso a peca esteja encurralada, 0 caso nao esteja. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="78" column="5" bodyfile="logica.c" bodystart="78" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1ada698c3adcce8d5c33d10004ebfac7f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_lados</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>check_lados</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica todas as casas a volta da peca branca caso se encontre em col == 0 ou col == 7. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso a peca esteja encurralada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="88" column="5" bodyfile="logica.c" bodystart="88" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1ad83373f532ddf59ddedb25a40b575626" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_bottom</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>check_bottom</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Verifica todas as casas a volta da peça branca caso se encontre em lin == 0 ou lin == 7;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso a peça esteja encurralada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="103" column="5" bodyfile="logica.c" bodystart="103" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1ab69d463df342757a679a40c4f6e5d6ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void tabuleiro_ficheiro</definition>
        <argsstring>(ESTADO *e, char *linha)</argsstring>
        <name>tabuleiro_ficheiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>linha</declname>
        </param>
        <briefdescription>
<para>Coloca o tabuleiro e o estado do jogo num ficheiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Nome do ficheiro onde vai ser guardado o estado. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Copia o nome do ficheiro presente na string &quot;linha&quot; e coloca na string &quot;comando&quot;, e concatena &quot;.txt&quot; no final. </para>
</blockquote></para>
<para><blockquote><para>Cria o ficheiro com o nome pedido pelo utilizador, ou abre-o, caso este ja exista. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="118" column="6" bodyfile="logica.c" bodystart="118" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1ac272f234a6e3ed2b2e3c05c727e33c75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ler_ficheiro</definition>
        <argsstring>(ESTADO *e, char linha[])</argsstring>
        <name>ler_ficheiro</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char</type>
          <declname>linha</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Lê um ficheiro e atualiza o estado do jogo com o estado do jogo definido nesse ficheiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha obtida pela função &quot;fgets()&quot; no interpretador. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso consiga ler o ficheiro, 0 caso nao consiga. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Copia o nome do ficheiro presente na string &quot;linha&quot; e coloca na string &quot;comando&quot;, e concatena &quot;.txt&quot; no final. </para>
</blockquote></para>
<para><blockquote><para>Abre o ficheiro pedido pelo utilizador e lê o seu conteúdo. </para>
</blockquote></para>
<para><blockquote><para>Ao ler o ficheiro, quando chega ao local onde se encontram as jogadas anteriores, chama a função &quot;update_array_jogadas()&quot;. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="134" column="5" bodyfile="logica.c" bodystart="134" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1abadfdc02ae37afa3fc371a15c0090e61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ler_tab</definition>
        <argsstring>(ESTADO *e, char *linha)</argsstring>
        <name>ler_tab</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>linha</declname>
        </param>
        <briefdescription>
<para>Função que atualiza os dados do jogo ao ler o ficheiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha obtida na função &quot;ler_ficheiro()&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="164" column="6" bodyfile="logica.c" bodystart="164" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a224bb3db996c2f3baca3a72b8509c3ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int retira_linha</definition>
        <argsstring>(char str[])</argsstring>
        <name>retira_linha</name>
        <param>
          <type>char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Converte a string no formato de dados do ficheiro criado pelo utilizador para um inteiro correspondente à linha. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String de onde vao ser tirados os dados. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Uma posição para a linha do tabuleiro. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="191" column="5" bodyfile="logica.c" bodystart="191" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a00a35418e9e9a6c215b653dceb822a03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int retira_coluna</definition>
        <argsstring>(char str[])</argsstring>
        <name>retira_coluna</name>
        <param>
          <type>char</type>
          <declname>str</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para>Converte a string no formato de dados do ficheiro criado pelo utilizador para um inteiro correspondente à coluna. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>String de onde vao ser tirados os dados. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Uma posição para a coluna do tabuleiro. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="205" column="5" bodyfile="logica.c" bodystart="205" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1aec4a963a88af44348027ec7cf17ff47a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int pos</definition>
        <argsstring>(ESTADO *e, char *linha)</argsstring>
        <name>pos</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>linha</declname>
        </param>
        <briefdescription>
<para>Função para executar o comando &quot;pos&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>linha</parametername>
</parameternamelist>
<parameterdescription>
<para>Linha obtida pelo interpretador na camada &quot;Interface&quot;. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso a operação seja executada com sucesso, 0 caso não seja executada com sucesso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Extrai o algarismo que é introduzido após o comando &quot;pos&quot; (&quot;pos 5&quot;, extrai o &quot;5&quot;). </para>
</blockquote></para>
<para><blockquote><para>Verifica que o comando &quot;pos&quot; apenas está a ser introduzido a uma jogada anterior e não à jogada atual. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="217" column="5" bodyfile="logica.c" bodystart="217" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a33c8928e31992541dd9cf0ce0e9f7d50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA get_cords</definition>
        <argsstring>(char *str)</argsstring>
        <name>get_cords</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cords</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="233" column="12" bodyfile="logica.c" bodystart="233" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a2b0f98e3493bc14d0f07d5ba5790c3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int scores</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>scores</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Atribui uma pontuação a cada uma das casas do tabuleiro. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A pontuação final. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Cria uma tabela com os scores. O score de uma dada casa é atribuido ao valor de (linha - coluna) de cada uma das casas. </para>
</blockquote></para>
<para><blockquote><para>Ao detetar em que posição do tabuleiro está a peça branca, dá return do score atribuido a essa posiçao. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="243" column="5" bodyfile="logica.c" bodystart="243" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a9dfbc982d23a619e36575d8e7ec8e41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jog</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jog</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função para o comando jog, joga em uma posição disponível aleatória. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Adiciona na lista ligada todas as casas para onde é possivel jogar. </para>
</blockquote></para>
<para><blockquote><para>Calcula a length da lista e gera um numero aleatorio entre 0 e o length-1. </para>
</blockquote></para>
<para><blockquote><para>Tendo em conta o numero aleatorio gerado pela função rand(), joga com as coordenadas na posição aleatoria da lista. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="263" column="6" bodyfile="logica.c" bodystart="263" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a1e4ba81358ad3fcb728e87199de3ce32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bestMove</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>bestMove</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que invoca o minimax para decidir qual é a melhor jogada a realizar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Invoca o minimax com player = 1 caso seja o jogador 1 a jogar, e player = -1 caso seja o jogador 2. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="285" column="6" bodyfile="logica.c" bodystart="285" bodyend="316"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a87984bf05c623849f7e349ba8060ebdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int negamax</definition>
        <argsstring>(ESTADO *e, int depth, int player)</argsstring>
        <name>negamax</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type>int</type>
          <declname>depth</declname>
        </param>
        <param>
          <type>int</type>
          <declname>player</declname>
        </param>
        <briefdescription>
<para>Variação do algoritmo &quot;minimax&quot;. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Cópia do estado do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>depth</parametername>
</parameternamelist>
<parameterdescription>
<para>Profundidade. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>player</parametername>
</parameternamelist>
<parameterdescription>
<para>Varia entre -1 e 1, dependendo de quem e a vez de jogar. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Score da posição onde a peça se encontra. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
<para><blockquote><para>Caso a depth seja = 0 ou esteja em posição terminal do jogo, da return do score (caso de paragem da função recursiva). </para>
</blockquote></para>
<para><blockquote><para>Analisa todas as peças possíveis e escolhe aquela que levar o jogador ao melhor score. </para>
</blockquote></para>
        </inbodydescription>
        <location file="logica.c" line="318" column="5" bodyfile="logica.c" bodystart="318" bodyend="347"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a0d0ae42af34190215d0219bc3230873b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_vencedora</definition>
        <argsstring>(ESTADO *e, LISTA L)</argsstring>
        <name>check_vencedora</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Verifica se o jogador se encontra na possibilidade de fazer uma jogada vencedora. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado atual do jogo. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista com posições possiveis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 caso exista uma jogada vencedora. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="349" column="5" bodyfile="logica.c" bodystart="349" bodyend="358"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1a269576c01f83872ee667e982ab409612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA get_vencedor</definition>
        <argsstring>(LISTA L)</argsstring>
        <name>get_vencedor</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
          <declname>L</declname>
        </param>
        <briefdescription>
<para>Caso exista uma jogada vencedora, obtem esta jogada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>L</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de jogadas possiveis. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>As coordenadas da jogada vencedora. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="360" column="12" bodyfile="logica.c" bodystart="360" bodyend="371"/>
      </memberdef>
      <memberdef kind="function" id="logica_8c_1ae7b26eaa85c6a0203bf27daf637df4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogador_vencedor</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>jogador_vencedor</name>
        <param>
          <type><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.c" line="373" column="5" bodyfile="logica.c" bodystart="373" bodyend="379"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="logica_8h" kindref="compound">logica.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interface_8h" kindref="compound">interface.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUF_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;unistd.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin<sp/>=<sp/>abs(c.linha<sp/>-<sp/>8)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>c.coluna;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a97c7ad5b7c6b698beca8006e674b85da" kindref="member">jogada_possivel</ref>(e,<sp/>c)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1a255c5b67db14c05fd537e095a75d8720" kindref="member">update_tab</ref>(e,<sp/>lin,<sp/>col);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ac49fe72dd1f44d79705e0a76d124bedb" kindref="member">set_ultima_jogada</ref>(e,<sp/>lin,<sp/>col);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1a9cf19fce71c78359807a3f579925edbb" kindref="member">atualiza_jogada</ref>(e,<sp/>col,<sp/>lin);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="23"><highlight class="normal">}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Verifica<sp/>se<sp/>a<sp/>jogada<sp/>pedida<sp/>pelo<sp/>utilizador<sp/>é<sp/>valida.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="logica_8h_1a97c7ad5b7c6b698beca8006e674b85da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a97c7ad5b7c6b698beca8006e674b85da" kindref="member">jogada_possivel</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lin<sp/>=<sp/>abs(c.linha<sp/>-<sp/>8)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1a6faa68373203923729ed38657aa0f768" kindref="member">obter_estado_casa</ref>(e,c)<sp/>==<sp/>BRANCA<sp/>||<sp/><ref refid="dados_8h_1a6faa68373203923729ed38657aa0f768" kindref="member">obter_estado_casa</ref>(e,c)<sp/>==<sp/>PRETA<sp/>||</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>abs((<ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e))<sp/>-<sp/>lin)<sp/>&gt;<sp/>1<sp/>||<sp/>abs((<ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e))<sp/>-<sp/>(c.coluna))<sp/>&gt;<sp/>1</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>||<sp/>lin<sp/>&gt;<sp/>7<sp/><sp/>||<sp/>lin<sp/>&lt;<sp/>0<sp/>||<sp/>c.coluna<sp/>&gt;<sp/><sp/>7<sp/>||<sp/>c.coluna<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">//Verifica<sp/>se<sp/>o<sp/>jogo<sp/>terminou.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="logica_8h_1aea1fcb269536a2b7ee0d12518887cd09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1aea1fcb269536a2b7ee0d12518887cd09" kindref="member">jogo_terminado</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e)<sp/>==<sp/>7))</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((<ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e)<sp/>==<sp/>7))</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1a6cd0b387bdee9e18003c78852394aa63" kindref="member">obter_numero_de_jogadas</ref>(e)<sp/>==<sp/>31)</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a1e08ddaa296db25866c21b3ea2a9c106" kindref="member">encurralado</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="logica_8h_1a1e08ddaa296db25866c21b3ea2a9c106" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a1e08ddaa296db25866c21b3ea2a9c106" kindref="member">encurralado</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/><ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e),<sp/>lin<sp/>=<sp/><ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>lin<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col<sp/>+<sp/>1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col+1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>7<sp/>&amp;&amp;<sp/>lin<sp/>==<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>0<sp/>||<sp/>col<sp/>==<sp/>7)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1ada698c3adcce8d5c33d10004ebfac7f5" kindref="member">check_lados</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lin<sp/>==<sp/>0<sp/>||<sp/>lin<sp/>==<sp/>7){</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1ad83373f532ddf59ddedb25a40b575626" kindref="member">check_bottom</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a9065d2c25c9052ce1f7f5e1d6272dd6e" kindref="member">check_around</ref>(e)<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="logica_8h_1a9065d2c25c9052ce1f7f5e1d6272dd6e" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a9065d2c25c9052ce1f7f5e1d6272dd6e" kindref="member">check_around</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/><ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e),<sp/>lin<sp/>=<sp/><ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col<sp/>+<sp/>1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col+1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col)<sp/>==<sp/>PRETA<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col+1)<sp/>==<sp/>PRETA</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col-1)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="86"><highlight class="normal">}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="logica_8h_1ada698c3adcce8d5c33d10004ebfac7f5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ada698c3adcce8d5c33d10004ebfac7f5" kindref="member">check_lados</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/><ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e),<sp/>lin<sp/>=<sp/><ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin<sp/>-<sp/>1,<sp/>col<sp/>+<sp/>1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col<sp/>+<sp/>1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin<sp/>+<sp/>1,<sp/>col<sp/>+<sp/>1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin<sp/>+<sp/>1,<sp/>col)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,col)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103" refid="logica_8h_1ad83373f532ddf59ddedb25a40b575626" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ad83373f532ddf59ddedb25a40b575626" kindref="member">check_bottom</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col<sp/>=<sp/><ref refid="dados_8h_1a9ebe0ef029e67e3bf7e7a1faa2bb97c5" kindref="member">ultima_coluna</ref>(e),<sp/>lin<sp/>=<sp/><ref refid="dados_8h_1ab2a81b236c1bcbdc1fe68e2544bd6c60" kindref="member">ultima_linha</ref>(e);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lin<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col+1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col+1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,<sp/>col)<sp/>==<sp/>PRETA</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin+1,col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col-1)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,col-1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col)<sp/>==<sp/>PRETA<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin-1,<sp/>col+1)<sp/>==<sp/>PRETA<sp/>&amp;&amp;<sp/><ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>lin,<sp/>col+1)<sp/>==<sp/>PRETA)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="comment">//Função<sp/>usada<sp/>para<sp/>o<sp/>comando<sp/>gr<sp/>(grava<sp/>o<sp/>estado<sp/>de<sp/>jogo<sp/>num<sp/>ficheiro).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="logica_8h_1ab69d463df342757a679a40c4f6e5d6ae" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ab69d463df342757a679a40c4f6e5d6ae" kindref="member">tabuleiro_ficheiro</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linha)<sp/>{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*comando;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>strtok(linha,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>comando<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(comando,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interface_8h_1aa36b92ddb3d9b1fdb93d8524262ee66c" kindref="member">imprime_fileTab</ref>(e,<sp/>fp);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="interface_8h_1acb7c3a1d861395fabd4db18a365738b9" kindref="member">file_posAnt</ref>(e,<sp/>fp);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="logica_8h_1ac272f234a6e3ed2b2e3c05c727e33c75" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1ac272f234a6e3ed2b2e3c05c727e33c75" kindref="member">ler_ficheiro</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>linha<sp/>[])<sp/>{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*fp;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>lin_fich<sp/>[BUF_SIZE],<sp/>*comando;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>strtok(linha,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>comando<sp/>=<sp/>strtok<sp/>(NULL,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>função<sp/>&quot;access&quot;<sp/>retorna<sp/>-1<sp/>caso<sp/>nao<sp/>encontre<sp/>o<sp/>ficheiro.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(access(comando,<sp/>F_OK)<sp/>!=<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1a543f64d33cbc5f4c00ad7dc4e60d2105" kindref="member">reinit</ref>(e);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1ae9e7e8cc18ddfff4c1883b1ec4daa0b7" kindref="member">reset_max_num_jogadas</ref>(e);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fp<sp/>=<sp/>fopen(comando,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(lin_fich,<sp/>BUF_SIZE,<sp/>fp)<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(k<sp/>&gt;=<sp/>9)<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1abadfdc02ae37afa3fc371a15c0090e61" kindref="member">ler_tab</ref>(e,<sp/>lin_fich);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>k++;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fclose(fp);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="logica_8h_1abadfdc02ae37afa3fc371a15c0090e61" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1abadfdc02ae37afa3fc371a15c0090e61" kindref="member">ler_tab</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linha)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>lin,<sp/>col2,<sp/>lin2;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linha2,<sp/>*cords;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>strtok(linha,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>linha2<sp/>=<sp/>strtok<sp/><sp/>(NULL,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>linha2[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>strtok(linha2,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>cords<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&gt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/><ref refid="logica_8h_1a00a35418e9e9a6c215b653dceb822a03" kindref="member">retira_coluna</ref>(linha2);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>abs(<ref refid="logica_8h_1a224bb3db996c2f3baca3a72b8509c3ce" kindref="member">retira_linha</ref>(linha2)-8)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col2<sp/>=<sp/><ref refid="logica_8h_1a00a35418e9e9a6c215b653dceb822a03" kindref="member">retira_coluna</ref>(cords);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin2<sp/>=<sp/>abs(<ref refid="logica_8h_1a224bb3db996c2f3baca3a72b8509c3ce" kindref="member">retira_linha</ref>(cords)-8)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>coord<sp/>=<sp/>{col,lin};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(e,coord);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>coord2<sp/>=<sp/>{col2,<sp/>lin2};</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(e,<sp/>coord2);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/><ref refid="logica_8h_1a00a35418e9e9a6c215b653dceb822a03" kindref="member">retira_coluna</ref>(linha2);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>abs(<ref refid="logica_8h_1a224bb3db996c2f3baca3a72b8509c3ce" kindref="member">retira_linha</ref>(linha2)-8)<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>coord<sp/>=<sp/>{col,lin};</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(e,coord);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191" refid="logica_8h_1a224bb3db996c2f3baca3a72b8509c3ce" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a224bb3db996c2f3baca3a72b8509c3ce" kindref="member">retira_linha</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[])<sp/>{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Quando<sp/>enconrtar<sp/>algum<sp/>elemento<sp/>da<sp/>string<sp/>para<sp/>a<sp/>qual<sp/>a<sp/>funcao<sp/>isdigit()<sp/>devolva<sp/>algum<sp/>valor<sp/>diferente<sp/>de<sp/>0,<sp/>converte-o<sp/>num<sp/>int<sp/>e<sp/>devolve-o.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isdigit(str[i])<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>strtol(&amp;str[i],<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>abs(r-8);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>r;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="203"><highlight class="normal">}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205" refid="logica_8h_1a00a35418e9e9a6c215b653dceb822a03" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a00a35418e9e9a6c215b653dceb822a03" kindref="member">retira_coluna</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str[])<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cord;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Quando<sp/>a<sp/>função<sp/>isalpha()<sp/>retornar<sp/>algum<sp/>valor<sp/>diferente<sp/>de<sp/>0,<sp/>converte-o<sp/>num<sp/>int<sp/>e<sp/>devolve-o.f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>str[i]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(isalpha(str[i])<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cord<sp/>=<sp/>str[i]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cord;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="215"><highlight class="normal">}</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="logica_8h_1aec4a963a88af44348027ec7cf17ff47a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1aec4a963a88af44348027ec7cf17ff47a" kindref="member">pos</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*linha)<sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*comando,<sp/>*end;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/>max<sp/>=<sp/><ref refid="dados_8h_1a9f2d95954ffa63c2f456e9481a883071" kindref="member">obter_max_num_jog</ref>(e);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>strtok<sp/>(linha,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>comando<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>r<sp/>=<sp/>strtol<sp/>(comando,<sp/>&amp;end,<sp/>10);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(r<sp/>&lt;<sp/>max<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1a72bd3fb56f0ac3af60c392b49f76a329" kindref="member">pos_helper</ref>(e,<sp/>r);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="231"><highlight class="normal">}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight></codeline>
<codeline lineno="233" refid="logica_8h_1a33c8928e31992541dd9cf0ce0e9f7d50" refkind="member"><highlight class="normal"><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="logica_8h_1a33c8928e31992541dd9cf0ce0e9f7d50" kindref="member">get_cords</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end;</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>col,<sp/>lin;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/>lin<sp/>=<sp/>strtol(str,<sp/>&amp;end,<sp/><sp/>10);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>col<sp/>=<sp/>strtol(end,<sp/><sp/>&amp;end,10);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>cord<sp/>=<sp/>{col,<sp/>abs(lin-8)-1};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cord;</highlight></codeline>
<codeline lineno="240"><highlight class="normal">}</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment">//funcao<sp/>auxiliar<sp/>do<sp/>minimax</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="logica_8h_1a2b0f98e3493bc14d0f07d5ba5790c3bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a2b0f98e3493bc14d0f07d5ba5790c3bb" kindref="member">scores</ref>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tabela[8][8],<sp/>score<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tabela[i][j]<sp/>=<sp/>i-j;</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>8;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>8;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="dados_8h_1ad4e371755c518dbe632dc8cb1280cdad" kindref="member">obter_casa</ref>(e,<sp/>i,<sp/>j)<sp/>==<sp/>BRANCA)</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>tabela[i][j];</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>score;</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="comment">//comando<sp/>jog.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">LISTA</ref><sp/>L<sp/>=<sp/><ref refid="lista_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>L<sp/>=<sp/><ref refid="lista_8h_1a0b56764e73eb24ca541210236e5ee307" kindref="member">add_livres</ref>(e,<sp/>L);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="structnodo" kindref="compound">LISTA</ref><sp/>K<sp/>=<sp/>L;<sp/><ref refid="lista_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(K)<sp/>!=<sp/>1;<sp/>K<sp/>=<sp/><ref refid="lista_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(K))<sp/>{</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(K);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s\n&quot;</highlight><highlight class="normal">,<sp/>str);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">LISTA</ref><sp/>T<sp/>=<sp/>L;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/><ref refid="lista_8h_1afbf1fd7cbee0a00eef9742a686e60c93" kindref="member">lengthLista</ref>(L);</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>random<sp/>=<sp/>rand()<sp/>%<sp/>length;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>random;<sp/>i++)</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>=<sp/><ref refid="lista_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(T);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(T);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref><sp/>=<sp/><ref refid="logica_8h_1a33c8928e31992541dd9cf0ce0e9f7d50" kindref="member">get_cords</ref>(str);</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(e,<sp/><ref refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref>);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="lista_8h_1a9cb229685e08e4b8706349624d2091a8" kindref="member">freeLista</ref>(L);</highlight></codeline>
<codeline lineno="283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285" refid="logica_8h_1a1e4ba81358ad3fcb728e87199de3ce32" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a1e4ba81358ad3fcb728e87199de3ce32" kindref="member">bestMove</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bestScore<sp/>=<sp/>INT_MIN,<sp/>score,<sp/>atual<sp/>=<sp/><ref refid="dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>best_jogada;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">LISTA</ref><sp/>L<sp/>=<sp/><sp/><ref refid="lista_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>L<sp/>=<sp/><ref refid="lista_8h_1a0b56764e73eb24ca541210236e5ee307" kindref="member">add_livres</ref>(e,<sp/>L);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a0d0ae42af34190215d0219bc3230873b" kindref="member">check_vencedora</ref>(e,<sp/>L)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="lista_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(L)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(L);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(str,<sp/></highlight><highlight class="stringliteral">&quot;7<sp/>0&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*aux<sp/>=<sp/><ref refid="dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" kindref="member">inicializar_estado</ref>();</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1a3815d005d1762c547d70d3198048e7d3" kindref="member">copyStruct</ref>(e,<sp/>aux);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref><sp/>=<sp/><ref refid="logica_8h_1a33c8928e31992541dd9cf0ce0e9f7d50" kindref="member">get_cords</ref>(str);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(aux,<sp/><ref refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atual<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="logica_8h_1a87984bf05c623849f7e349ba8060ebdd" kindref="member">negamax</ref>(aux,<sp/>5,<sp/>1);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/><ref refid="logica_8h_1a87984bf05c623849f7e349ba8060ebdd" kindref="member">negamax</ref>(aux,<sp/>5,<sp/>-1);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(aux);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>&gt;<sp/>bestScore)<sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_jogada<sp/>=<sp/><ref refid="logica_8h_1a9dfbc982d23a619e36575d8e7ec8e41c" kindref="member">jog</ref>;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/><ref refid="lista_8h_1a9026a681a68322b5ec7f07137b864cbd" kindref="member">remove_cabeca</ref>(L);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>best_jogada<sp/>=<sp/><ref refid="logica_8h_1a269576c01f83872ee667e982ab409612" kindref="member">get_vencedor</ref>(L);</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(e,<sp/>best_jogada);</highlight></codeline>
<codeline lineno="316"><highlight class="normal">}</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318" refid="logica_8h_1a87984bf05c623849f7e349ba8060ebdd" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a87984bf05c623849f7e349ba8060ebdd" kindref="member">negamax</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>depth,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>player)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bestScore<sp/>=<sp/>INT_MIN,<sp/>score;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">LISTA</ref><sp/>L<sp/>=<sp/><ref refid="lista_8h_1ae3b99323b6f8f35d80bb69ff1a27985e" kindref="member">criar_lista</ref>();</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/>L<sp/>=<sp/><ref refid="lista_8h_1a0b56764e73eb24ca541210236e5ee307" kindref="member">add_livres</ref>(e,<sp/>L);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a1e08ddaa296db25866c21b3ea2a9c106" kindref="member">encurralado</ref>(e)<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(depth<sp/>==<sp/>0<sp/>||<sp/><ref refid="logica_8h_1aea1fcb269536a2b7ee0d12518887cd09" kindref="member">jogo_terminado</ref>(e))<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a2b0f98e3493bc14d0f07d5ba5790c3bb" kindref="member">scores</ref>(e)<sp/>*<sp/>player);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="lista_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(L)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*aux<sp/>=<sp/><ref refid="dados_8h_1a7e0c7e26fb685d9ab501e19b05e6954f" kindref="member">inicializar_estado</ref>();</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dados_8h_1a3815d005d1762c547d70d3198048e7d3" kindref="member">copyStruct</ref>(e,<sp/>aux);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(L);</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>jogada<sp/>=<sp/><ref refid="logica_8h_1a33c8928e31992541dd9cf0ce0e9f7d50" kindref="member">get_cords</ref>(str);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(str,<sp/></highlight><highlight class="stringliteral">&quot;0<sp/>7&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0<sp/>||<sp/>strncmp<sp/>(str,<sp/></highlight><highlight class="stringliteral">&quot;7<sp/>0&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(<ref refid="logica_8h_1a2b0f98e3493bc14d0f07d5ba5790c3bb" kindref="member">scores</ref>(e)*(player));</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="logica_8h_1ac313d7e553b1e2b5f266acb9bfff8141" kindref="member">jogar</ref>(aux,<sp/>jogada);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>score<sp/>=<sp/>-<ref refid="logica_8h_1a87984bf05c623849f7e349ba8060ebdd" kindref="member">negamax</ref>(aux,<sp/>depth<sp/>-<sp/>1,<sp/>player<sp/>*<sp/>(-1));</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(aux);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(score<sp/>&gt;<sp/>bestScore)</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bestScore<sp/>=<sp/>score;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/><ref refid="lista_8h_1a9026a681a68322b5ec7f07137b864cbd" kindref="member">remove_cabeca</ref>(L);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>bestScore;</highlight></codeline>
<codeline lineno="347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349" refid="logica_8h_1a0d0ae42af34190215d0219bc3230873b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8h_1a0d0ae42af34190215d0219bc3230873b" kindref="member">check_vencedora</ref><sp/>(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structnodo" kindref="compound">LISTA</ref><sp/>L)<sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structnodo" kindref="compound">LISTA</ref><sp/>T;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atual<sp/>=<sp/><ref refid="dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(T<sp/>=<sp/>L;<sp/>!<ref refid="lista_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(T);<sp/>T<sp/>=<sp/><ref refid="lista_8h_1ad9380152361127432c55c1c6067e05ae" kindref="member">proximo</ref>(T))<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(T);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp<sp/>(str,</highlight><highlight class="stringliteral">&quot;7<sp/>0&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>atual<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal">}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="logica_8h_1a269576c01f83872ee667e982ab409612" refkind="member"><highlight class="normal"><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/><ref refid="logica_8h_1a269576c01f83872ee667e982ab409612" kindref="member">get_vencedor</ref>(<ref refid="structnodo" kindref="compound">LISTA</ref><sp/>L)<sp/>{</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_c_o_o_r_d_e_n_a_d_a" kindref="compound">COORDENADA</ref><sp/>jogada<sp/>=<sp/>{0,0};</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="lista_8h_1a4c10928f7acaa4e3de3760cea0dfd9c0" kindref="member">lista_esta_vazia</ref>(L)<sp/>!=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/><ref refid="lista_8h_1abfcb205f3eb670157be0d1221021714b" kindref="member">devolve_cabeca</ref>(L);</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strncmp(str,<sp/></highlight><highlight class="stringliteral">&quot;7<sp/>0&quot;</highlight><highlight class="normal">,<sp/>3)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>jogada<sp/>=<sp/><ref refid="logica_8h_1a33c8928e31992541dd9cf0ce0e9f7d50" kindref="member">get_cords</ref>(str);</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/><ref refid="lista_8h_1a9026a681a68322b5ec7f07137b864cbd" kindref="member">remove_cabeca</ref>(L);</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>jogada;</highlight></codeline>
<codeline lineno="371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador_vencedor(<ref refid="struct_e_s_t_a_d_o" kindref="compound">ESTADO</ref><sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>atual<sp/>=<sp/><ref refid="dados_8h_1ad6e326e4ffa57ca1ae0c75377ecefc8c" kindref="member">obter_jogador_atual</ref>(e);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atual<sp/>==<sp/>1)</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="logica.c"/>
  </compounddef>
</doxygen>
